import p5 from 'p5'
// Comment these out if you don't need sound and dom support:
import 'p5/lib/addons/p5.sound'
import 'p5/lib/addons/p5.dom'

// If you downloaded any additional P5.js addons, load them here:
//import 'addons/p5.collide2d'

// Libraries for the React components. Do not change this:
import React from 'react'
import {render} from 'react-dom'
import {HashRouter, Route, Switch} from 'react-router-dom'
import asyncComponent from 'components/utilities/asyncComponent'
import Sketchbook from 'components/Sketchbook'

// Attach to a node:
const node = document.querySelector('#sketch');

// Create a MutationObserver to correctly attach a sketch to #sketch if the user forgets to do so:
const observer = new MutationObserver((mutations) => {
	mutations.forEach((mutation) => {
		if(mutation.addedNodes.length > 0) {
			mutation.addedNodes.forEach((addedNode) => {
				if(addedNode.tagName && addedNode.tagName.toLowerCase() === 'canvas') {
					node.appendChild(addedNode);
				}
			})
		}
	})
});
observer.observe(document.querySelector('body'), { attributes: true, childList: true, characterData: true });

let p5Instance = undefined;

// Function to generate an asyncComponent when passed a sketch name:
const SketchRoute = (sketch) => asyncComponent(() =>
	// For webpack's import to work, the file has to be a relative path or point absolutely to a package:
	import(`./${sketch}.js`).then(module => {
		// Run sketch:
		if(typeof module.default === 'function') {
			p5Instance = new p5(module.default, node);
		} else if((window.setup && typeof window.setup === 'function') ||
		          (window.draw && typeof window.draw === 'function')) {
			p5Instance = new p5();
		}
	})
);
// sketchbook is a list of all sketches that's generated by webpack. We map it into a route object that loads an asyncComponent as its target component:
const routes = sketchbook.map((sketch) => (<Route path={`/${sketch}`} key={sketch} exact component={SketchRoute(sketch)} />) );

const setTitle = () => {
	if(window.location.hash === '#/') {
		document.title = 'P5.js Sketchbook'
	} else {
		document.title = `P5.js Sketch - ${window.location.hash.replace('#/sketches/','')}`
	}
}

document.addEventListener('DOMContentLoaded', setTitle);

// Handle hash change by unloading the sketch and updating document title:
window.addEventListener('hashchange', () => {
	// Update the title to the sketch name:
	setTitle();
	// Set a window.unload function if you want it to unload:
	if(window.unload && typeof window.unload === 'function') {
		window.unload();
	}
	// Call remove to kill the sketch, if we can:
	if(window.remove && typeof window.remove === 'function') {
		window.remove();
	}
})

render(
	<HashRouter>
		<Switch>
			<Route path='/' exact component={Sketchbook} />
			{routes}
		</Switch>
	</HashRouter>
,
	node);